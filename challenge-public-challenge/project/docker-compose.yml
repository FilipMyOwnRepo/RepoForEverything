services:
  # traefik:
  #   image: "traefik:v3.3"
  #   container_name: "traefik"
  #   command:
  #     - "--log.level=DEBUG"
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entryPoints.web.address=:80"
  #     - "--entryPoints=Name:https Address::443 TLS"
  #   ports:
  #     - target: 80
  #       published: 80
  #       protocol: tcp
  #     - target: 443
  #       published: 443
  #       protocol: tcp
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #   restart: always
  api:
    build:
      context: .
      dockerfile: Dockerfile
    networks:
      - api-net
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./source:/source
    environment:
      - FLASK_ENV=development
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/allowlist"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: docker_task_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - ./source/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d docker_task_db"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/source/nginx/nginx.conf
      - ./certs:/source/nginx/certs
    depends_on:
      - api
    networks:
      - api-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/allowlist"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  db_data:

networks:
  api-net:
    driver: bridge